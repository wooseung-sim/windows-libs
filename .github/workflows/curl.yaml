name: Build curl Windows Temp
on:
  push:
    branches:
      - main
  workflow_dispatch:
    inputs:
      openSslVersion:
        description: "OpenSSL version to download and build, eg 1.1.1w"
        required: true
        default: "1.1.1w"
        type: string
      nasmVersion:
        description: "NASM version (Required to utilize assember module for openssl windows), eg 2.15.05"
        required: true
        default: "2.15.05"
        type: string
      curlVersion:
        description: "Curl version to download and build, eg 8.5.0"
        required: true
        default: "8.5.0"
        type: string

jobs:
  openssl:
    name: Build OpenSSL
    uses: ./.github/workflows/openssl.yaml
    with:
      openSslVersion: ${{ startsWith(github.event_name, 'workflow_') && github.event.inputs.openSslVersion || '1.1.1w' }}
      nasmVersion: ${{ startsWith(github.event_name, 'workflow_') && github.event.inputs.nasmVersion || '2.15.05' }}

  curl-window:
    needs: openssl
    name: Build Curl Window
    runs-on: windows-2022
    strategy:
      matrix:
        configs:
          - release
          - debug
        targets:
          - x86
          - x64
    env:
      CURL_VERSION: ${{ startsWith(github.event_name, 'workflow_') && github.event.inputs.curlVersion || '8.5.0' }}
      RTLIBCFG: static
      MODE: static
      SSL_MODE: static
      VC_VER: '14'
    steps:
      - name: Set variables
        id: setup
        shell: pwsh
        run: |
          $curlFile = "curl-${{ env.CURL_VERSION }}"
          echo "curlFile=$curlFile" | Out-File -FilePath $Env:GITHUB_OUTPUT -Encoding utf8 -Append
          echo "curlPkg=${curlFile}.tar.gz" | Out-File -FilePath $Env:GITHUB_OUTPUT -Encoding utf8 -Append
          
          $sslDir = Join-Path -Path $pwd -ChildPath "openssl"
          echo "sslDir=$sslDir" | Out-File -FilePath $Env:GITHUB_OUTPUT -Encoding utf8 -Append

          $outPath = "out"
          mkdir $outPath
          echo "outPath=$outPath" | Out-File -FilePath $Env:GITHUB_OUTPUT -Encoding utf8 -Append

          $curlPath = Join-Path -Path "out" -ChildPath $curlFile
          $winbuildPath = Join-Path -Path $curlPath -ChildPath "winbuild"
          echo "winbuildPath=$winbuildPath" | Out-File -FilePath $Env:GITHUB_OUTPUT -Encoding utf8 -Append

          $buildsPath = Join-Path -Path $curlPath -ChildPath "builds"
          $libName = "libcurl-vc${{ env.VC_VER }}-${{ matrix.targets }}-${{ matrix.configs }}-${{ env.MODE }}-ssl-${{ env.SSL_MODE }}-ipv6-sspi"
          $libPath = Join-Path -Path $buildsPath -ChildPath $libName
          echo "libPath=$libPath" | Out-File -FilePath $Env:GITHUB_OUTPUT -Encoding utf8 -Append

      - name: Add MSBuild to PATH
        uses: microsoft/setup-msbuild@v2
      
      - name: Enable Developer Command Prompt for Microsoft Visual C++ (vcvarsall)
        uses: ilammy/msvc-dev-cmd@v1.13.0
        with:
          arch: ${{ matrix.targets }}

      - name: Download curl source
        shell: pwsh
        run: |
          Invoke-WebRequest -OutFile ${{ steps.setup.outputs.curlPkg }} -Uri https://curl.se/download/${{ steps.setup.outputs.curlPkg }}

      - name: Extract Curl
        shell: pwsh
        working-directory: ${{ steps.setup.outputs.outPath }}
        run: |
          tar -xf ..\${{ steps.setup.outputs.curlPkg }}

      - uses: actions/download-artifact@v4.1.4
        name: Fetch openssl-win-${{ matrix.targets }}-${{ matrix.configs }} build artifacts
        with:
          name: openssl-win-${{ matrix.targets }}-${{ matrix.configs }}
          path: openssl

      - name: nmake Curl
        shell: pwsh
        working-directory: ${{ steps.setup.outputs.winbuildPath }}
        run: |
          nmake /f Makefile.vc mode=$Env:MODE VC=$Env:VC_VER GEN_PDB=no WITH_SSL=$Env:SSL_MODE ENABLE_IPV6=yes ENABLE_IDN=no DEBUG=${{ matrix.configs == 'debug' && 'yes' || 'no' }} MACHINE=${{ matrix.targets }} ENABLE_SPNEGO=no ENABLE_OPENSSL_AUTO_LOAD_CONFIG=no WITH_DEVEL=${{ steps.setup.outputs.sslDir }}

      - name: show artifacts
        shell: pwsh
        working-directory: ${{ steps.setup.outputs.libPath }}
        run: |
          Get-ChildItem -Recurse

      - name: Archive openSSL libs artifacts
        uses: actions/upload-artifact@v4.3.1
        with:
          name: curl-win-${{ matrix.targets }}-${{ matrix.configs }}
          path: |
            ${{ steps.setup.outputs.libPath }}\bin
            ${{ steps.setup.outputs.libPath }}\include
            ${{ steps.setup.outputs.libPath }}\lib
